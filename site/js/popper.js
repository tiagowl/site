/ *
 Direitos autorais (C) Federico Zivolo 2019
 Distribuído sob a licença MIT (os termos da licença estão em http://opensource.org/licenses/MIT).
 * / (function (e, t) {'objeto' == tipo de exportação && 'indefinido'! = tipo de módulo? module.exports = t (): 'function' == typeof define && define.amd? define (t): e. Popper = t ()}) (isso, function () {'use strict'; function e (e) {return e && '[objeto Function]' === {}. ToString.call (e)} função t (e , t) {if (1! == e.nodeType) return []; var o = e.ownerDocument.defaultView, n = o.getComputedStyle (e, nulo); retorno t? n [t]: n} função o (e) {return'HTML '=== e.nodeName? e: e.parentNode || e.host} função n (e) {if (! e) retornar document.body; switch (e.nodeName) {caso 'HTML': case'BODY ': retornar e.ownerDocument.body; caso' # document ': retornar e.body;} var i = t (e), r = i.overflow, p = i.overflowX, s = i.overflowY; return /(auto|scroll|overlay)/.test(r+s+p)?e:n(o(e))}}function r (e) {retornar 11 === e? pe: 10 === e? se: pe || se} função p (e) {if (! e) documento de retorno.documentElement; para (var o = r (10)? document.body: null, n = e.offsetParent || nulo; n === o && e.nextElementSibling;) n = (e = e.nextElementSibling) .offsetParent; var i = n && n.nodeName; retorno i && 'BODY'! == i && 'HTML'! == i? -1! == ['TH', 'TD', 'TABELA']. indexOf (n.nodeName) && 'static '=== t (n,' posição ')? p (n): n: e? e.ownerDocument.documentElement: document.documentElement} função s (e) {var t = e.nodeName; return'BODY'! == t && ('HTML' === t || p (e.firstElementChild) === e)} função d (e) {retorno nulo === e.parentNode? e: d (e.parentNode)} função a (e, t) {if (! e ||! e.nodeType ||! t || t.nodeType) return document.documentElement; var o = e.compareDocumentPosition (t) & Node.DOCUMENT_POSITION_FOLLOWING, n = o? e: t, i = o? t: e, r = document.createRange (); r.setStart (n, 0), r.setEnd (i, 0); var l = r.commonAncestorContainer; if (e! == l && t! == l || n.contains (i)) retorna s (l) l l: p (l); var f = d (e); retorno f.host?a ( f.host, t): a (e, d (t) .host)} função l (e) {var t = 1 <argumentos.length && void 0! == argumentos [1]? argumentos [1]: 'top' , o = 'topo' === t? 'scrollTop': 'scrollLeft', n = e.nodeName; if ('BODY' === n || 'HTML' === n) {var i = e. ownerDocument.documentElement, r = e.ownerDocument.scrollingElement || i; return r [o]} return e [o]} função f (e, t) {var = 2 <argumentos.length && void 0! == argumentos [2 ] && argumentos [2], n = l (t, 'topo'), i = l (t, 'esquerda'), r = o? -1: 1; retorno e.top + = n * r, e.bottom + = n * r, e.left + = i * r, e.right + = i * r, e} função m (e, t) {var o = 'x' === t? 'esquerda': 'superior', n = 'Left' == o 'Right': 'Bottom'; retorna parseFloat (e ['border' + o + 'Width'], 10) + parseFloat (e ['border '+ n +' Width '], 10)} função h (e, t, o, n) {retorno ee (t [' deslocamento '+ e], t [' rolar '+ e], o [' cliente ' + e], o ['deslocamento' + e], o ['rolar' + e], r (10)? parseInt (o ['deslocamento' + e]) + parseInt (n ['margem' + ('Altura '=== e' Top ':' Esquerda ')]) + parseInt (n [' margin '+ (' Height '=== e?' Bottom ':' Right ')]): 0)} função c (e) {var t = e.body, o = e.documentElement, n = r (10) && getComputedStyle (o); retorno {altura: h ('Altura', t, o, n), largura: h (' Largura ', t, o, n)}} função g (e) {função de retorno fe ({}, e, {direita: e.left + e.width, bottom: e.top + e.height})} (e) {var o = {}; tente {if (r (10)) {o = e.getBoundingClientRect (); var n = l (e, 'topo'), i = l (e, 'esquerda') ; o.top + = n, o.left + = i, o.bottom + = n, o.right + = i} else o = e.getBoundingClientRect ()} captura (t) {} var p = {esquerda: o.left, top: o.top, largura: o.right-o.left, height: o.bottom-o.top}, s = 'HTML' === e.nodeName? c (e.ownerDocument): {}, d = s.width || e.clientWidth || p.right -p.left, a = s.height || e.clientHeight || p.bottom-p.top, f = e.offsetWidth-d, h = e.offsetHeight-a; if (f || h) {var u = t (e); f- = m (u, 'x'), h- = m (u, 'y'), p.width- = f, p.height- = h} retorno g (p) } function b (e, o) {var i = 2 <argumentos.length && void 0! == argumentos [2] && argumentos [2], p = r (10), s = 'HTML' === o.nodeName, d = u (e), a = u (o), l = n (e), m = t (o), h = parseFloat (m.borderTopWidth, 10), c = parseFloat (m.borderLeftWidth, 10); i && s && (a.top = ee (a.top, 0), a.left = ee (a.left, 0)); var b = g ({superior: d.top-a.top-h, esquerda: d. left-a.left-c, largura: d.width, height: d.height}); if (b.marginTop = 0, b.marginLeft = 0,! p && s) {var w = parseFloat (m.marginTop, 10 ), y = parseFloat (m.marginLeft, 10) b.top- = hw, b.bottom- = hw, b.left- = cy, b.right- = cy, b.marginTop = w, b.marginLeft = y} return (p &&! i? o.contains (l): o === l && 'BODY'! == l.nodeName) && (b = f (b, o)), b} função w (e ) {var t = 1 <argumentos.length && void 0! == argumentos [1] && argumentos [1], o = e.ownerDocument.documentElement, n = b (e, o), i = ee (o.clientWidth, janela. innerWidth || 0), r = ee (o.clientHeight, window.innerHeight || 0), p = t? 0: l (o), s = t? 0: l (o, 'esquerda'), d = {top: pn.top + n.marginTop, esquerda: sn.left + n.marginLeft, largura: i, altura: r}; retorno g (d)} função y (e) {var n = e.nodeName; ('BODY' === n || 'HTML' === n) retorno! 1; if ('fixo' === t (e 'posição')) return! 0; var i = o (e) ; return !! i && y (i)} função E (e) {if (! e ||! e.parentElement || r ()) return document.documentElement; para (var o = e.parentElement; o && 'none' = == t (o, 'transformar');) o = o.parentElement; retorno o || document.documentElement} função v (e, t, i,r) {var p = 4 <argumentos.length && void 0! == argumentos [4] && argumentos [4], s = {topo: 0, esquerdo: 0}, d = p? E (e): a (e, t if ('viewport' === r) s = w (d, p); else {var l; 'scrollParent' === r? (l = n (o (t)), 'CORPO' == = l.nodeName && (l = e.ownerDocument.documentElement)): 'window' === r? l = e.ownerDocument.documentElement: l = r; var f = b (l, d, p); if (' HTML '=== l.nodeName &&! Y (d)) {var m = c (e.ownerDocument), h = m.height, g = m.width; s.top + = f.top-f.marginTop, s .bottom = h + f.top, s.left + = f.left-f.marginLeft, s.right = g + f.left} else s = f} i = i || 0; var u = 'número' = = typeof i; return s.left + = u? i: i.left || 0, s.top + = u? i: i.top || 0, s.right- = u? i: i.right || 0 , s.bottom- = u? i: i.bottom || 0, s} função x (e) {var t = e.width, o = e.height; retorno t * o} função O (e, t, o, n, i) {var r = 5 <argumentos.length && void 0! == argumentos [5]? argumentos [5]: 0; if (-1 === e.indexOf ('auto')) return e; var p = v (o, n, r, i), s = {topo: {largura: p.width, altura: t.top-p.top}, direita: {largura: p.right -t.right, height: p.height}, bottom: {largura: p.width, height: p.bottom-t.bottom}, esquerda: {largura: t.left-p.left, altura: p.height }}, d = Object.keys (s) .map (função (e) {return fe ({chave: e}, s [e], {área: x (s [e])})}). função (e, t) {retorno t.area-e.area}), a = d.filter (função (e) {var t = e.width, n = e.height; retorno t> = o.clientWidth && n> = o.clientHeight}), l = 0 <a.length? a [0] .chave: d [0] .key, f = e.split ('-') [1]; retorno l + (f? '- '+ f:' ')} função L (e, t, o) {var n = 3 <argumentos.length && void 0! == argumentos [3]? argumentos [3]: null, i = n? E (t) : a (t, o); retorno b (o, i, n)} função S (e) {var t = e.ownerDocument.defaultView, o = t.getComputedStyle (e), n = parseFloat (o.marginTop | | 0) + parseFloat (o.marginBottom || 0), i = parseFloat (o.marginLeft || 0) + parseFloat (o.marginRight || 0), r = {largura: e.offsetWidth + i, altura: e.offsetHeight + n}; retorno r} função T (e) {var t = {esquerda: 'direita', direita: 'esquerda', inferior: 'superior', superior: 'inferior'} return e.replace (/ left | right | bottom | top / g, função (e) {return t [e]})} função D (e, t, o) {o = o.split ('-') [0]; var n = S (e), i = {largura: n.width, altura: n.height}, r = -1! == ['right', 'left']. IndexOf (o), p = r 'topo': 'esquerda', s = r 'esquerda': 'topo', d = r 'altura': 'largura', a = r 'largura': 'altura'; [p] = t [p] + t [d] / 2-n [d] / 2, i [s] = o === s? t [s] -n [a]: t [T (s) ], i} função C (e, t) {retornar Array.prototype.find? e.find (t): e.filter (t) [0]} função N (e, t, o) {if (Array. prototype.findIndex) retorna e.findIndex (função (e) {return e [t] === o}); var n = C (e, função (e) {return e [t] === o}); return e.indexOf (n)} função P (t, o, n) {var i = void 0 === n t: t.slice (0, N (t, 'nome', n));return i.forEach (function (t) {t ['função'] && console.warn ('`modifier.function` está depreciado, use` modifier.fn`!'); var n = t ['função'] || t.fn; t.enabled && e (n) && (o.offsets.popper = g (o.offsets.popper), o.offsets.reference = g (o.offsets.reference), o = n (o, t) )}), o} função k () {if (! this.state.isDestroyed) {var e = {exemplo: this, estilos: {}, arrowEstilos: {}, atributos: {}, invertidos:! 1, deslocamentos : {}}; e.offsets.reference = L (this.state, this.popper, this.reference, this.options.positionFixed), e.placement = O (this.options.placement, e.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding), e.originalPlacement = e.placement, e.positionFixed = this.options.positionFixed, e.offsets .popper = D (this.popper, e.offsets.reference, e.placement), e.offsets.popper.position = this.options.positionFixed 'fixo': 'absoluto', e = P (this.modifiers, e), this.state.isCreated? this.options.onUpdate (e) :( this.state.isCreated =! 0, this.options. onCreate (e))}} função W (e, t) {return e.some (função (e) {var o = e.name, n = e.enabled; retorno n && o === t})} função H ( e) {para (var t = [! 1, 'ms', 'Webkit', 'Moz', 'O'], o = e.charAt (0) .toUpperCase () + e.slice (1), n = 0; n <t.length; n ++) {var i = t [n], r = i? '' + I + o: e; if ('indefinido'! = Tipo de document.body.style [r]) return r} retornar null} function B () {retornar this.state.isDestroyed =! 0, W (this.modifiers, 'applyStyle') && (this.popper.removeAttribute ('x-placement'), this.popper. style.position = '', this.popper.style.top = '', this.popper.style.left = '', this.popper.style.right = '', this.popper.style.bottom = '' , this.popper.style.willChange = '', this.popper.style [H ('transform')] = ''), this.disableEventListeners (), this.options.removeOnDestroy && this.popper.parentNode.removeChild (this.popper), esta} função A (e) {var t = e.ownerDocument; retorno t? t.defaultView: window} função M (e, t, o, i) {var r = 'BODY' === e.nodeName, p = r? e Função .ownerDocument.defaultView: e; p.addEventListener (t, o, {passivo:! 0}), r || M (n (p.parentNode), t, o, i), i.push (p)} F (e, t, o, i) {o.updateBound = i, A (e) .addEventListener ('redimensionar', o.updateBound, {passivo:! 0}); var r = n (e); retorno M (r, 'scroll', o.updateBound, o.scrollParents), o.scrollElement = r, o.eventsEnabled =! 0, o} função I () {this.state.eventsEnabled || (this.state = F ( this.reference, this.options, this.state, this.scheduleUpdate))} função R (e, t) {return A (e) .removeEventListener ('resize', t.updateBound), t.scrollParents.forEach (function (e) {e.removeEventListener ('scroll', t.updateBound)}), t.updateBound = nulo, t.scrollParents = [], t.scrollElement = null, t.eventsEnabled =! 1, t} função U () {this.state.eventsEnabled && (cancelAnimationFrame (this.scheduleUpdate), this.state = R (this.reference, this.state))} função Y (e) {return ''! == e &&! isNaN ( parseFloat (e)) && éFinito (e)} função j (e, t) {Object.keys (t) .forCada (função (o) {var n = ''; - 1! == ['largura', 'altura ',' top ',' right ',' bottom ',' left ']. indexOf (o) && Y (t [o]) && (n =' px '), e.style [o] = t [o] + n})} função V (e, t) {Object.keys (t) .forCada (função (o) {var n = t [o] ;! 1 === n? e.removeAttribute (o): e Função (,, t [o])})} função q (e, t) {var o = e.offsets, n = o.popper, i = o.reference, r = $, p = função (e) {return e}, s = r (i.width), d = r (n.width), a = -1! == ['left ',' right ']. indexOf (e.placement), l = -1! == e.placement.indexOf (' - '), f = t? a || l || s% 2 == d% 2? R: Z: p, m = t? R: p; retorno {esquerda: f (1 == s% 2 && 1 == d% 2 &&! L && t? N.left-1: n.left), topo: m (n.top), bottom: m (n.bottom), direita: f (n.right)}} função K (e, t, o) {var n = C (e, função (e) {var o = e.name; retorno o === t}), i = !! n && e.some (função (e) {retorno e.name === o && e.enabled && e.order <n.order}); if (! i) {var r = '`' + t + '`'; console.warn (modificador '+' o '+' é requerido pelo modificador '+ r +' para funcionar, certifique-se de incluí-lo antes '+ r + '!')} return i} função z (e) {return'end '=== e?' start ':' start '=== e?' end ': e} função G (e) {var t = 1 <argumentos.length && void 0! == argumentos [1] && argumentos [1], o = ce.indexOf (e), n = ce.slice (o + 1) .concat (ce.slice (0,o)); return t? n.reverse (): n} function _ (e, t, o, n) {var i = e.match (/ ((?: \ - | \ +)? \ d * \ ? \ d *) (. *) /), r = + i [1], p = i [2], se (! r) return e; if (0 === p.indexOf ('%') ) {var s; switch (p) {caso '% p': s = o; quebra; caso '%': caso '% r': padrão: s = n;} var d = g (s); retorno d [t] / 100 * r} if ('vh' === p || 'vw' === p) {var a; return a = 'vh' === p? ee (document.documentElement.clientHeight, window.innerHeight || 0): ee (document.documentElement.clientWidth, window.innerWidth || 0), a / 100 * r} return r} função X (e, t, o, n) {var i = [0 , 0], r = -1! == ['right', 'left']. IndexOf (n), p = e.split (/ (\ + | \ -) ​​/). Map (function (e) { return e.trim ()}), s = p.indexOf (C (p, função (e) {return-1! == e.search (/, | \ s /)})); p [s] && -1 === p [s] .indexOf (',') && console.warn ('Offsets separados por espaços em branco são obsoletos, use uma vírgula (,) no lugar.'); Var d = / \ s * \ s * | \ s + /a = -1 === s? [p]: [p.slice (0, s) .concat ([p [s] .split (d) [0]]), [p [s] .split (d ) [1]] concat (p.slice (s + 1))]; retorne a = a.map (função (e, n) {var i = (1 === n?! R: r)? ' height ':' width ', p =! 1; return e.reduce (função (e, t) {return' '=== e [e.length-1] && - 1! == [' + ',' - ']. indexOf (t)? (e [e.length-1] = t, p = 0, e): p? (e [comprimento-1] + = t, p =! 1, e ): e.concat (t)}, []). map (função (e) {return _ (e, i, t, o)})}), a.forCada (função (e, t) {e. forEach (função (o, n) {S (o) && (i [t] + = o * ('-' === e [n-1]? - 1: 1))})}), i} função J (e, t) {var o, n = t.offset, i = e.placement, r = e.offsets, p = r.popper, s = r.referência, d = i.split ('-' ) [0]; retorno o = Y (+ n)? [+ N, 0]: X (n, p, s, d), 'esquerdo' === d? (P.top + = o [0], p.left- = o [1]): 'right' === d? (p.top + = o [0], p.left + = o [1]): 'topo' === d? left + = o [0], p.top- = o [1]): 'bottom' === d && (p.ft + = o [0], p.top + = o [1]), e.popper = p ,e} para (var Q = Math.min, Z = Math.floor, $ = Math.round, ee = Math.max, te = 'indefinido'! = tipo de janela && 'indefinido'! = tipo de documento, oe = [' Edge ',' Trident ',' Firefox '], ne = 0, ie = 0; ie <oe.length; ie + = 1) if (te && 0 <= navigator.userAgent.indexOf (oe [ie])) {ne = 1; break} var i = te && window.Promise, re = i? Função (e) {var t =! 1; função return () {t || (t =! 0, window.Promise.resolve (). Então ( function () {t =! 1, e ()}))}}: função (e) {var t =! 1; função de retorno () {t || (t =! 0, setTimeout (function () {t =! 1, e ()}, ne))}}, pe = te && !! (window.MSInputMethodContext && document.documentMode), se = te && / MSIE 10 / .test (navigator.userAgent), de = função (e, t ) {if (! (e instanceof t)) lança novo TypeError ('Não é possível chamar uma classe como uma função')}, ae = function () {function e (e, t) {para (var o, n = 0; n <t.length; n ++) o = t [n], o.enumerável = o.enumerável ||! 1,o.configurable =! 0, 'value'in o && (o.writable =! 0), Object.defineProperty (e, o.key, o)} função de retorno (t, o, n) {return o && e (t.prototype , o), n && e (t, n), t}} (), le = function (e, t, o) {retorno t em e? Object.defineProperty (e, t, {valor: o, enumerável:! 0 , configurável:! 0, gravável:! 0}): e [t] = o, e}, fe = Object.assign || function (e) {para (var t, o = 1; o <argumentos.length; o ++) para (var n em t = argumentos [o], t) Object.prototype.hasOwnProperty.call (t, n) && (e [n] = t [n]); return e}, me = te && / Firefox /i.test(navigator.userAgent),he=['auto-start','auto','auto-end','top-start','top','top-end','right-start ' , 'right', 'end-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'], ce = he.slice ( 3), ge = {FLIP: 'flip', CLOCKWISE:'clockwise', COUNTERCLOCKWISE: 'sentido anti-horário'}, ue = function () {função t (o, n) {var i = isto, r = 2 <argumentos.length && void 0! == argumentos [2]? argumentos [2] : {}; de (this, t), this.scheduleUpdate = function () {retornar requestAnimationFrame (i.update)}, this.update = re (this.update.bind (this)), this.options = fe ( {}, t.Defaults, r), this.state = {isDestroyed:! 1, isCreated:! 1, scrollParents: []}, this.reference = o && o.jquery? o [0]: o, this.popper = n && n.jquery? n [0]: n, this.options.modifiers = {}, Object.keys (fe ({}, t.Defaults.modifiers, r.modifiers)) forEach (function (e) {i. options.modifiers [e] = fe ({}, t.Defaults.modifiers [e] || {}, r.modifiers? r.modifiers [e]: {})}), this.modifiers = Object.keys ( this.options.modifiers) .map (função (e) {return fe ({nome: e}, i.options.modifiers [e])}). sort (função (e, t) {return e.order-t .order}), this.modifiers.forEach (function (t) {t.enabled && e (t.onLoad) && t.onLoad (i.reference, i.popper, i.options, t, i.state)}), this.update (); var p = this.options.eventsEnabled; p && this.enableEventListeners ( ), this.state.eventsEnabled = p} retorna ae (t, [{key: 'update', valor: function () {retorno k.call (this)}}, {chave: 'destroy', valor: function ( ) {return B. call (this)}}, {key: 'enableEventListeners', valor: function () {retorno I.call (this)}}, {chave: 'disableEventListeners', valor: function () {retorno U .call (this)}}]), t} (); return ue.Utils = ('indefinido' == tipo de janela? global: janela) .PopperUtils, ue.placements = he, ue.Defaults = {colocação: ' bottom ', positionFixed:! 1, eventsEnabled:! 0, removeOnDestroy:! 1, onCreate: function () {}, onUpdate: function () {}, modificadores: {shift: {ordem: 100, ativada:! 0, fn : função (e) {var t = e. posicionamento, o = t.split ('-') [0], n = t.split ('-') [1];if (n) {var i = e.offsets, r = i.referência, p = i.popper, s = -1! == ['bottom', 'top']. indexOf (o), d = s? 'left': 'top', a = s 'width': 'height', l = {início: le ({}, d, r [d]), final: le ({}, d, r [d ] + r [a] -p [a])}; e.offsets.popper = fe ({}, p, l [n])} retorno e}}, deslocamento: {ordem: 200, ativada:! 0, fn: J, offset: 0}, preventOverflow: {ordem: 300, ativada:! 0, fn: function (e, t) {var = limitaç} es ||||||||||||||||||| .referência === o && (o = p (o)); var n = H ('transformar'), i = e.instance.popper.style, r = i.top, s = i.left, d = i [n]; i.top = '', i.left = '', i [n] = ''; var a = v (e.instance.popper, e.instance.reference, t.padding, o, e .positionFixed); i.top = r, i.left = s, i [n] = d, t.limites = a; var l = t.prioridade, f = e.offsets.popper, m = {primary: function (e) {var o = f [e]; return f [e] <a [e] &&! t.escapeWithReference && (o = ee (f [e], a [e])) le ({}, e o)}secundário: function (e) {var o = 'right' === e 'left': 'top', n = f [o]; retorno f [e]> a [e] &&! t.escapeWithReference && (n = Q (f [o], a [e] - ('right' === e? F.width: f.height))) le ({}, o, n)}}; retorno l.forCada ( função (e) {var t = -1 === ['left', 'top']. indexOf (e)? 'secundário': 'primário'; f = fe ({}, f, m [t] ( e)}), e.offsets.popper = f, e}, priority: ['left', 'right', 'top', 'bottom'], preenchimento: 5, boundariesElement: 'scrollParent'}, keepTogether: {ordem: 400, ativada:! 0, fn: function (e) {var = e.offsets, o = t.popper, n = t.reference, i = e.placement.split ('-') [0 ], r = Z, p = -1! == ['superior', 'inferior']. indexOf (i), s = p 'direito': 'inferior', d = p '' esquerdo ':' topo ', a = p' largura ':' altura '; retorno o [s] <r (n [d]) && (e.offsets.popper [d] = r (n [d]) - o [a] )o [d]> r (n [s]) && (e.offsets.popper [d] = r (n [s])), e}}, seta: {ordem: 500, ativada:! 0, fn: function (e, o) {var n; if (! K (e.instance.modifiers, 'arrow', 'keepTogether')) retornar e; var i = o.element; if ('string' == typeof i) {if (i = e.instance.popper.querySelector (i),! i) retorne e;} else if (! e.instance.popper.contains (i)) retorne console.warn ('AVISO: `arrow.element `deve ser filho de seu elemento popper! '), e; var r = e.placement.split (' - ') [0], p = e.offsets, s = p.popper, d = p.reference, a = -1! == ['left', 'right']. IndexOf (r), l = a 'height': 'width', f = a 'Top': 'Left', m = f.toLowerCase (), h = a 'esquerda': 'superior', c = a 'inferior': 'direita', u = S (i) [l]; d [c] -u <s [m] && ( e.offsets.popper [m] - = s [m] - (d [c] -u)), d [m] + u> s [c] && (e.offsets.popper [m] + = d [ m] + us [c]), e.offsets.popper = g (e.offsets.popper); var b = d [m] + d [l] / 2-u / 2, w = t (e.instance.popper), y = parseFloat (w ['margin' + f], 10) , E = parseFloat (w ['limite' + f + 'Largura'], 10), v = be.offsets.popper [m] -yE; retorno v = ee (Q (s [l] -u, v), 0), e.arrowElement = i, e.offsets.arrow = (n = {}, le (n, m, $ (v)), le (n, h, ''), n), e}, elemento : '[x-arrow]'}, flip: {ordem: 600, habilitado:! 0, fn: function (e, t) {se (W (e.instance.modifiers, 'inner')) return e; (e.flipped && e.placement === e.originalPlacement) return e; var o = v (e.instance.popper, e.instance.reference, t.padding, t.boundariesElement, e.positionFixed), n = e. placement.split ('-') [0], i = T (n), r = e.placement.split ('-') [1] || '', p = []; comutador (t. comportamento) {case ge.FLIP: p = [n, i]; quebra; case ge.CLOCKWISE: p = G (n); quebra; ge.COUNTERCLOCKWISE: p = G (n,! 0); quebra; padrão: p = t.behavior;} return p.forEach (função (s, d) {if (n! == s || p.length === d + 1) return e; n = e.placement.split ('-') [0], i = T (n); var a = e.offsets.popper, l = e.offsets.reference , f = Z, m = 'esquerda' === n && f (a.right)> f (l.left) || 'right' === n && f (a.left) <f (l.right) || ' topo '=== n && f (a.bottom)> f (l.top) ||' inferior '=== n && f (a.top) <f (l.bottom), h = f (a.left) <f (o.left), c = f (a.right)> f (o.right), g = f (a.top) <f (o.top), u = f (a.bottom)> f (o .bottom), b = 'left' === n && h || 'right' === n && c || 'top' === n && g || 'bottom' === n && u, w = -1! == [' top ',' bottom ']. indexOf (n), y = !! t.flipVariations && (w &&' start '=== r && h || w &&' end '=== r && c ||! w &&' start '=== r && g ||! w && 'end' === r && u); (m || b || y) && (e.flipado =! 0, (m || b) && (n = p [d + 1]), y & (r = z (r)), e.placement = n + (r? '-' + r: ''), e.offsets.popper = fe ({} , e.offsets.popper, D (e.instance.popper, e.offsets.reference, e.placement)), e = P (e.instance.modifiers, e, 'flip'))}), e}, comportamento: 'flip', padding: 5, boundariesElement: 'viewport'}, inner: {ordem: 700, ativada:! 1, fn: function (e) {var = e.placement, o = t.split (' - ') [0], n = e.offsets, i = n.popper, r = n.referência, p = -1! == [' left ',' right ']. IndexOf (o), s = - 1 === ['top', 'left']. IndexOf (o); retorna i [p? 'Esquerda': 'topo'] = r [o] - (s? I [p? 'Largura': ' height ']: 0), e.placement = T (t), e.offsets.popper = g (i), e}}, ocultar: {order: 800, enabled:! 0, fn: function (e) { if (! K (e.instance.modifiers, 'ocultar', 'preventOverflow')) return e; var t = e.offsets.reference, o = C (e.instance.modifiers, função (e) {return 'PrevineOverflow '=== e.name}). limites; if (t.bottom <o.top || t.left> o.right || t.top> o.bottom || t.right <o.left) {if (! 0 === e.hide) return e; e.hide =! 0, e.attributos ['x-fora-dos-limites'] = ''} mais {if (! 1 === e .hide) return e; e.hide =! 1, e.attributes ['x-fora-dos-limites'] =! 1} return e}}, computeStyle: {order: 850, enabled:! 0, fn: função (e, t) {var o = tx, n = ty, i = e.offsets.popper, r = C (e.instance.modifiers, função (e) {return'applyStyle '=== e.name} ) .gpuAcceleration; void 0! == r && console.warn ('AVISO: a opção `gpuAcceleration` movida para o modificador` computeStyle` e não será suportada em futuras versões do Popper.js!'); var s, d, a = void Aceleração: r, l = p (e.instance.popper), f = u (l), m = {posição: i.position}, h = q (e, 2> janela. devicePixelRatio ||! me), c = 'bottom' === o? 'top': 'bottom', g = 'right '=== n?' left ':' right ', b = H (' transform '); if (d =' bottom '== c?' HTML '=== l.nodeName? -l.clientHeight + h.bottom: -f.height + h.bottom: h.top, s = 'right' == g? 'HTML' === l.nodeName? -l.clientWidth + h.right: -f.width + h.right: h.left, a && b) m [b] = 'traduzir3d (' + s + 'px,' + d + 'px, 0)', m [c] = 0, m [g] = 0, m. willChange = 'transform'; else {var w = 'bottom' == c? -1: 1, y = 'right' == g? -1: 1; m [c] = d * w, m [g] = s * y, m.willChange = c + ',' + g} var E = {"x-placement": e.placement}; return e.attributes = fe ({}, E, e.atributos), e. styles = fe ({}, m, e.styles), e.arrowStyles = fe ({}, e.offsets.arrow, e.arrowStyles), e}, gpuAcceleration:! 0, x: 'bottom', y: 'right'}, applyStyle: {order: 900, enabled:! 0, fn: function (e) {retorno j (e.instance.popper, e.styles), V (e.instance.popper, e.attributes) e.arrowElement && Object.keys (e.arrowStyles) .length && j (e.arrowElement, e.arrowStyles), e}, onLoad: function (e, t, o, n, i) {var r = L (i, t, e, o .positionFixed), p = O (o.placement, r, t, e, o.modifiers.flip.boundariesElement, o.modifiers.flip.padding); retorno t.setAttribute ('x-placement', p), j (t, {posição: o.positionFixed? 'fixo': 'absoluto'}), o}, gpuAcceleration: void 0}}}, ue});
// # sourceMappingURL = popper.min.js.map